{
  "hash": "0ce10aa0d980fbb877bdabb129e67942",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto projects for advanced content\"\nsubtitle: \"Enhancing scientific publishing through Quarto\"\ninstitute: \"Posit\"\nauthor: \"Christophe Dervieux\"\ndate: \"2024-07-08\"\nformat: clean-revealjs\ncode-line-numbers: false\neditor: visual\nlightbox: true\n---\n\n\n\n\n\n\n## Projet Quarto ?\n\nQuarto projects are **directories** that provide :\n\n::: incremental\n* a way to `render` all or part of the files in a directory using a single command (for example, `quarto render myproject`).\n* A means of sharing YAML configuration between several documents.\n* The ability to redirect output artifacts to another directory.\n* The ability to freeze rendering (i.e. not re-run documents unless they have changed).\n:::\n\n## We've already created a project...\n\nA project is a directory with a `_quarto.yml`, no matter how simple.\n\n``` {.yaml filename=\"_quarto.yml\"}\nproject:\n  title: \"Quarto-101\"\n```\n\n![](images/quarto-project.png){fig-alt=\"Files panel in RStudio showing my-doc.qmd and _quarto.yml.\"}\n\n\n\n\n## Which projects can be created ?\n\nProjects can have special \"types\" that introduce additional behavior (for example, websites or books).\n\n``` bash\n$ quarto create project\n? Type\n‚ùØ default\n  website\n  blog\n  manuscript\n  book\n  confluence\n```\n\n## Quarto Website\n\n- Arbitrary depth and organization of content\n- Multi-level navigation (navigation bar / sidebar / hybrid)\n- Full-text search (client-side or Algolia)\n- Freeze calculation results (`freeze` configuration)\n\n## Quarto Website\n\n``` {.yaml filename=\"_quarto.yml\" code-line-numbers=\"|2|4-5|6-10|12-15\"}\nproject:\n  type: website\n\nwebsite:\n  title: \"today\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: cosmo\n    toc: true\n```\n\n::: aside\nExample: <https://quarto.org> and more in the [Gallery](https://quarto.org/docs/gallery/#websites)\n:::\n\n## Quarto Blogs\n\n:::: columns\n\n::: column\n\n- Inherits Quarto site functionalities (navigation, search, etc.)\n\n- Automatically generated list and RSS feeds\n\n- Customizable home page (inspired by the R package [postcards](https://github.com/seankross/postcards))\n\n:::\n\n::: aside\nExamples: <https://quarto.org/docs/blog/> and more in the [Gallery](https://quarto.org/docs/gallery/#websites)\n:::\n\n::: {.column .make-smaller}\n```{.yaml filename=\"index.qmd (website with posts/)\"}\n---\ntitle: \"myblog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n---\n```\n<br> \n```{.yaml filename=\"posts/first-post/index.qmd\"}\n---\ntitle: \"Post With Code\"\ndescription: \"Post description\"\nauthor: \"Fizz McPhee\"\ndate: \"5/22/2021\"\ncategories:\n  - news\n  - code\n---\n```\n:::\n::::\n\n## {background-image=images/screenshot-blog.png}\n\n## Quarto Books\n\n- Inherits Quarto site functionalities (navigation, search, etc.)\n- Supports cross-referencing between chapters\n- Output formats include HTML, PDF, MS Word and ePub.\n\n::: aside\nExamples: <https://quarto.org/docs/gallery/#books>\n:::\n\n## Quarto Books\n\n```{.yaml filename=\"_quarto.yml\" code-line-numbers=\"|2|4-5|8-12|14|16-22\"}\nproject:\n  type: book\n\nbook:\n  title: \"mybook\"\n  author: \"Jane Doe\"\n  date: \"8/18/2021\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - summary.qmd\n    - references.qmd\n\nbibliography: references.bib\n\nformat:\n  html:\n    theme: cosmo\n  pdf:\n    documentclass: scrreport\n  epub:\n    cover-image: cover.png\n```\n\n##  {background-image=\"images/screenshot-book-hopr.png\"}\n\n## And much more...\n\n- [Metadata shared by subfolder](https://quarto.org/docs/projects/quarto-projects.html#shared-metadata) with `_metadata.yml`\n- [Run scripts before and after `quarto render` (_Project Scripts_)](https://quarto.org/docs/projects/scripts.html)\n- [Creation of customized item lists](https://quarto.org/docs/websites/website-listings-custom.html)\n- ...\n\n## Your turn! \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_956b8cc6\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n::: {.callout}\n\n# Turn your project into a website\n\n1. Add an `index.qmd` to your existing `Quarto-101` project. \n2. Modify the `_quarto.yml` to make a website\n3. `quarto preview` to see your website evolve\n4. Add navigation to display your `new-penguins.qmd` report in a submenu of the `navbar`.\n5. Customize your website! \n:::\n\n::: callout-tip\n\n## Learn to navigate in the doc!\n\nUse the Quarto documentation on the `website` type to play with the options: <https://quarto.org/docs/websites/>\n:::\n\n## My turn\n\n::: task\nLet's now add a blog component to our website.\n\n-   Add a folder called `posts` and create a few minimal blog post entries and collect these from a blog page using the [listings feature](https://quarto.org/docs/websites/website-listings.html).\n\n-   Change the style of listings.\n:::\n\n# Computations\n\n## When should code be re-run? {.smaller}\n\n::: incremental\n-   You might have a reason to re-run all code in a Quarto website (every single chunk in every single document) every time you render the website.\n\n-   But, chances are, that's not what you want.\n\n    -   Just playing around styling -- you probably don't want to run the code again\n\n    -   Changed some code in a document -- you probably want to re-run the code in that document, but not necessarily others\n\n    -   Made a big change affecting computations on many or all pages -- you probably want to re-run all code\n\n-   `freeze` and `cache` options give you fine control over these decisions\n:::\n\n## Freeze {.smaller}\n\n-   The `freeze` option controls when/if computational documents be re-rendered during a global project render:\n\n``` yaml\nexecute:\n  freeze: true  # never re-render during project render\n```\n\n``` yaml\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n\n``` yaml\nexecute:\n  freeze: false  # always re-render\n```\n\n-   The `freeze` option is typically added to a `_metadata.yml` file within a specific directory, affecting all files in that directory.\n\n-   For blogs, set `feeze` in `_metadata.yml` at the root of the `posts` directory.\n\n-   You can have it only within specific subdirectories for more complex sites.\n\n## Cache\n\n-   Cache stores the results of computations for a specific file.\n\n-   Cache invalidation is triggered by changes in chunk source code (or other cache attributes you've defined).\n\n-   `cache` can also be set at the chunk level. Consider using the cache for computationally expensive chunks.\n\n## Freeze vs. cache {.smaller}\n\n-   Freeze option is typically set\n\n    -   for the whole website in `_quarto.yml`, or\n\n    -   for files within a directory in `_metadata.yml` in that directory\n\n``` yaml\nexecute: \n  freeze: auto\n```\n\n-   Cache option is typically set for a given file or for individual chunk(s) in a file.\n\n``` yaml\nexecute:\n  cache: true\n```\n\nor\n\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| cache: true\n\n1 + 1\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\n# Publishing\n\n## QuartoPub\n\n-   [Quarto Pub](https://quartopub.com/) is a free publishing service for content created with Quarto. It is ideal for blogs, course or project websites, books, presentations, and personal hobby sites.\n\n-   Publish with `quarto publish`:\n\n``` {.bash filename=\"Terminal\"}\nquarto publish quarto-pub\n```\n\n-   Gain a `_publish.yml` that is safe to check into version control.\n\n## Other venues\n\n-   GitHub Pages\n-   Posit Connect\n-   Netlify\n-   Confluence\n-   [More venues](https://quarto.org/docs/publishing/other.html)\n\n# Questions ?\n\n::: fragment\nLet's recap...\n\n[[Next]{.button}](/4-synthese/)\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}